// Navigation menu
$navbar-options: (
    min-width: 220px,
    gutter: 6px,
    breakpoint: map-get($breakpoint-list, sm)

);

.#{$ui-class-prefix}-navbar {
    
    width: auto;
    margin: 0;
	padding: 0;
	list-style-type: none;
    position: relative;
	@include flexbox; 
	@include flex-wrap(nowrap);
	@include flex-direction(row);

    @include breakpoint( map-get($navbar-options, breakpoint) ) {
		@include flex-direction(column);
		width: 100%;
    }
    
	&.vertical {
		@include flex-direction(column);
		width: 100%;
	}

	ul {
		display: block; 
		margin: 0;
		padding: 0;
		list-style: none;
	}

	li {
		margin: 0;
		padding: 0;

		> ul { 
			position: absolute;
			top:100%;
			left:0;
			z-index: 1000;
			min-width: map-get($navbar-options, minwidth);
			visibility:hidden;
			text-align: left;
			@include opacity(0);

			@include breakpoint( map-get($navbar-options, breakpoint) ) {
				position: relative;
				top: auto;
				left: auto;
				right: auto;
				display: none;
			}

			li {
				float: none;
				position: relative;
			}
			li > ul {
				position: absolute;
			  	top: 0;
			  	left: 100%;
			  	visibility:hidden;
			  	text-align: left;
			  	@include opacity(0);
			  	@include breakpoint( map-get($navbar-options, breakpoint) ) {
					position: relative;
					top: auto;
					left: auto;
					right: auto;
					display: none;
				}
			}
		}

		@include breakpoint_min( map-get($navbar-options, breakpoint) ) {
			&:focus > ul,
			&:focus-within > ul,
			&:hover > ul,
			li.ddmenu__active > ul {
				visibility:visible;
				@include opacity(1);
			}
		}

		&.ddmenu__focus > ul {
			display: block;
			visibility:visible;
			@include opacity(1);
		}
	}


	&:before, &:after {
		content: "";
		display: table;		
	}
	&:after {
		clear: both;
	}
	

	// FIRST LEVEL ITEMS
	> li {

		margin-right: map-get($navbar-options, gutter);
		display: inline-block;
    	vertical-align: middle;
    	white-space: nowrap;
    	position: relative;

		@include breakpoint( map-get($navbar-options, breakpoint) ) {
			margin-right: 0;
		}



		// Change the direction of the submenu to be aligned to the left. 
		&#{$self}__revert-sub {
		  ul { 
		    right: 0; 
		    left: auto; 
		    @include breakpoint( map-get($navbar-options, breakpoint) ) {
				left: auto;
				right: auto;
			}
		    
		    ul {
		    	right: 100%;
		      	left: auto;
		      	
		      	@include breakpoint( map-get($navbar-options, breakpoint) ) {
					left: auto;
					right: auto;
				}
		    }
		  }
		}
		// Stretch the submenu to the full width of the menu
		&.megamenu {
      		position: unset;
            
			> ul, > div {
				min-width:100%;
				width:100%;
			}
		}

		a {
			display: block;
			text-decoration: none;
		}

		&:last-child {
			margin-right: 0;			
		}

	}

	&.vertical > li {
		
			margin-right: 0;
			display: block;
			width: 100%;		
		
	}


	// Change the direction of the last item to be aligned to the left. 
	&.pin-last {
        
        position: relative;
		
		> li:last-child {
			ul {
				right: 0; 
				left: auto; 
		  		@include breakpoint( map-get($navbar-options, breakpoint) ) {
					left: auto;
					right: auto;
				}
		  		ul {
		  			right: 100%;
		  			left: auto;
		  			@include breakpoint( map-get($navbar-options, breakpoint) ) {
						left: auto;
						right: auto;
					}
		  		}
			}
		}
	}
	
	
	// Fade out menus
	&#{$self}.effect-fade {
		li > ul {
			visibility:hidden;
			@include opacity(0);
			@include transition( 200ms ease);
		}
		li:focus > ul,
		li:focus-within > ul,
		li:hover > ul,
		li.ddmenu__active > ul {
			visibility: visible;
			@include opacity(1);
		}
	}
	// Ease out menus
	&#{$self}.effect-ease {
		li > ul {
			visibility:hidden;
			@include opacity(0);
			@include prefix('transform', translateY(-12px));
			@include transition(all 200ms ease-in-out, visibility 0s linear 200ms, z-index 0s linear 0.01s);
		}
		li:focus > ul,
		li:focus-within > ul,
		li:hover > ul,
		li.ddmenu__active > ul {
			visibility: visible;
			@include opacity(1);
			@include prefix('transform', translateY(0%));
			transition-delay: 0s, 0s, 200ms;
		}
	}
	// Fold out menus
	&#{$self}.effect-fold {
		
		li > ul {
			max-height: 0;
			@include prefix('transform', perspective(400) rotate3d(1,0,0,-90deg));
			@include prefix('transform-origin', 50% 0);
			@include transition( map-get($dropdown-menu, transition) ease);
		}
		li:focus > ul,
		li:focus-within > ul,
		li:hover > ul,
		li.ddmenu__active > ul {
			 max-height:1000px;
			 @include prefix('transform', perspective(400) rotate3d(0,0,0,0));
		}
	
	}
	// Slide out menus
	&#{$self}.effect-slide {
		
		li > ul li {
			overflow: hidden;
			max-height: 0;
			@include transition(max-height map-get($dropdown-menu, transition) ease-in-out);
		}

		ul {
			visibility: visible;
			@include opacity(1);
		}

		li:hover > ul > li {
			max-height: 150px;
		}
	}

}

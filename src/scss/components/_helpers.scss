// FLOATS 
.float-left {
  float: left;
}
@each $bp in $breakpoints-prefix {
  $curr: $bp;
  @include breakpoint($curr) {
    .float-left-#{$curr} {
      float: left;
    }
  }
}
.float-right {
  float: right;
}
@each $bp in $breakpoints-prefix {
  $curr: $bp;
  @include breakpoint($curr) {
    .float-right-#{$curr} {
      float: left;
    }
  }
}

.clearfix {
  @include clearfix();
}

@each $bp in $breakpoints-prefix {
	.hide-on-#{$bp} {
	  @include breakpoint($bp) { display: none !important; }
	}
	.show-on-#{$bp} {
	  display: none;
	  @include breakpoint_min($bp) { display: block; }
	}
	.only-on-#{$bp} {
	  display: none;
	  @include breakpoint_between($bp) { display: block; }
	}
	
}

// COLORS
@each $colorName, $color in $color-list {
  .bg-#{""+$colorName+""} {
    background-color: $color !important;
  }
  .text-#{""+$colorName+""} {
    color: $color !important;
  }
  .text-on-#{""+$colorName+""} {
    color: findColorInvert($color) !important;
  }
}

// WIDTHS
//@for $i from 1 through 20 {
//  $x: $i*5;
//  .width-#{$x} {
//    width: percentage($x/100);
//  } 
//  @each $bp in $breakpoints-prefix {
//		$curr: $bp;
//		@include breakpoint($curr) {
//			.width-#{$curr}-#{$x} {
//        width: percentage($x/100);
//      }
//    }
//  }
//}


// Shadows
.shadow, .shadow-more, .shadow-less {
  @include transition(all 0.2s ease);
}

.shadow {
  @include prefix(box-shadow, 0 2px 6px -1px rgba(0, 0, 0, 0.14) );
  &:hover {
    @include prefix(box-shadow, 0 4px 6px -1px rgba(0, 0, 0, 0.14) );
  }
}

.shadow-more {
  @include prefix(box-shadow, 0 4px 8px 0 rgba(0, 0, 0, 0.2) );
  &:hover {
    @include prefix(box-shadow, 0 8px 10px 0 rgba(0, 0, 0, 0.2) );
  }
}

.shadow-less {
  @include prefix(box-shadow, 0 2px 2px -1px rgba(0, 0, 0, 0.1) );
  &:hover {
    @include prefix(box-shadow, 0 3px 3px -1px rgba(0, 0, 0, 0.13) );
  }
}


.shadow-none {
  @include prefix(box-shadow, none !important);
}

.img-rounded {
  border-radius: 5px
}

.img-circle {
  border-radius: 50%
}

.img-cover {
  -o-object-fit: cover;
  object-fit: cover
}

.img-contain {
  -o-object-fit: contain;
  object-fit: contain
}

.outside-the-box {
	width: 100vw;
	max-width: 100vw;
	position: relative;
	margin-left: calc(-50vw + 50%);
	margin-right: calc(-50vw + 50%);
}
img.outside-the-box { 
	object-fit: cover;
}

.vertical-layout {
	min-height: 100%;
    @include flexbox;
    @include flex-direction(column);
    @include align-items(stretch);

    > *:not(:first-child):not(:last-child) {
    	@include flex-grow(1);
    }
    > :first-child, > :last-child {
    	@include flex-shrink(0);
    }
}
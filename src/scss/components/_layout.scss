@import '../config/breakpoints';

@import '../functions/commons';
@import '../mixins/browser_support';
@import '../mixins/breakpoints';
@import '../mixins/flexbox';
@import '../mixins/helpers';

// FLEXBOX LAYOUT 
.flex {

	@include flexbox;
	@include flex-direction(row);
	@include flex-wrap(wrap);
	&.vertical {
		@include flex-direction(column);
	}
	&.centerize {
		@include flex-direction(column);
		@include justify-content(center);
	}
	&.no-wrap {
		@include flex-wrap(nowrap);
	}

	&.align-between, &[align~="between"] {
		@include justify-content(space-between);
	}
	&.align-around, &[align~="around"] {
		@include justify-content(space-around);
	}
	&.align-right, &[align~="right"] {
		@include justify-content(flex-end);
	}
	&.align-left, &[align~="left"] {
		@include justify-content(flex-start);
	}
	&.align-center, &[align~="center"] {
		@include justify-content(center);
	}

	&.valign-top, &[valign~="top"] {
		@include align-items(flex-start);
	}
	&.valign-center, &[valign~="center"] {
		@include align-items(center);
	}
	&.valign-bottom, &[valign~="bottom"] {
		@include align-items(flex-end);
	}
	// Children
	> * {
		@include flex(0 1 auto);
	}
	&.align-center > *, &[align~="center"] > * {
		@include flex-basis(25%);
	}
	&.grow > * {
		@include flex-grow(1);
	}
	&.shrink > * {
		@include flex-shrink(1);
	}
	
	> *[flex~="grow"] {
		@include flex-grow(1);
	}
	> *[flex~="shrink"] {
		@include flex-shrink(1);
	}

	> *[valign~="top"]~, > *.valign-self-top {
		@include align-self(flex-start);
	}
	> *[valign~="center"], > *.valign-self-center {
		@include align-self(center);
	}
	> *[valign~="bottom"], > *.valign-self-bottom {
		@include align-self(flex-end);
	}

	@each $bp in $breakpoints-prefix {
		$curr: $bp;
		
		@include breakpoint($curr) {
			&.centerize-#{$curr} {
				@include flex-direction(column);
				@include justify-content(center);
			}
			&.align-between-#{$curr}, &[align~="between-#{$curr}"] {
				@include justify-content(space-between);
			}
			&.align-around-#{$curr}, &[align~="around-#{$curr}"] {
				@include justify-content(space-around);
			}
			&.align-right-#{$curr}, &[align~="right-#{$curr}"] {
				@include justify-content(flex-end);
			}
			&.align-left-#{$curr}, &[align~="left-#{$curr}"] {
				@include justify-content(flex-start);
			}
			&.align-center-#{$curr}, &[align~="center-#{$curr}"] {
				@include justify-content(center);
			}

			&.valign-top-#{$curr}, &[valign~="top-#{$curr}"] {
				@include align-items(flex-start);
			}
			&.valign-center-#{$curr}, &[valign~="center-#{$curr}"] {
				@include align-items(center);
			}
			&.valign-bottom-#{$curr}, &[valign~="bottom-#{$curr}"] {
				@include align-items(flex-end);
			}


			> *[flex~="grow-#{$curr}"] {
				@include flex-grow(1);
			}
			> *[flex~="shrink-#{$curr}"] {
				@include flex-shrink(1);
			}

			> *[valign~="top-#{$curr}"], > *.valign-#{$curr}-self-top {
				@include align-self(flex-start);
			}
			> *[valign~="center-#{$curr}"], > *.valign-#{$curr}-self-center {
				@include align-self(center);
			}
			> *[valign~="bottom-#{$curr}"], > *.valign-#{$curr}-self-bottom {
				@include align-self(flex-end);
			}
		}
	}


}

// VERTICAL FLEXBOX
.vertical-layout {
	min-height: 100%;
    @include flexbox;
    @include flex-direction(column);
    @include align-items(stretch);

    > *:not(:first-child):not(:last-child) {
    	@include flex-grow(1);
    }
    > :first-child, > :last-child, {
    	@include flex-shrink(0);
    }
}

// MASONRY

$masonry-gutter: 8px !default;
$masonry-height: 250px !default;
$masonry-minwidth: 150px !default;
$breakpoints-rev: reverse($breakpoints-prefix);


.masonry {
	@include flexbox;
	@include flex-flow(column wrap);
  	margin-left: -$masonry-gutter;
  	width: 100%;

  	// Default size without spesifications (3,2,1)
  	.masonry-brick {
    	overflow: hidden;
    	margin: 0 0 $masonry-gutter $masonry-gutter;
    	position: relative;
    	width: 33.33333%;
    	
    	@include breakpoint_between(sm) {
      		width: 50%;
    	}
    	@include breakpoint_between(xs) {
      		width: 100%;
    	}
  	}

  	@for $i from 2 through 6 {
		&.size-#{$i} {
			.masonry-brick {
				width: 100/$i + 0%;
				@include breakpoint_between(sm) {
		      		width: 50%;
		    	}
		    	@include breakpoint_between(xs) {
		      		width: 100%;
		      		
		    	}
			}
		}
	}
  
  	@each $bp in $breakpoints-rev {
		$curr: $bp;
		
		@include breakpoint($curr) {
			@for $i from 2 through 6 {
				&.size-#{$i}-#{$bp} {
					.masonry-brick {
						width: 100/$i + 0%;
					}
				}
			}
		}
		
    }

}

.masonry_vertical {
	@include flexbox;
	@include flex-flow(row wrap);
  	margin-left: -$masonry-gutter;
  	width: 100%;

  	// Default size without spesifications (3,2,1)
  	.masonry-brick {
  		@include flex(auto);
		height: $masonry-height;
  		min-width: $masonry-minwidth;
    	margin: 0 0 $masonry-gutter $masonry-gutter;
    	position: relative;
    	width: 33.33333%;
    	
    	@include breakpoint_between(sm) {
      		width: 50%;
    	}
    	@include breakpoint_between(xs) {
      		width: 100%;
    	}
  	}

}


// APP-LAYOUT 
.app-container {

	width: 100%;
	max-width: 100%;
	height: 100%;
	height: 100vh;

	@include flexbox;
	@include flex-direction(column);
	
	color: #f6f6f6;
	background-color: #121212;

	.app-header,.app-contents, .app-footer {
		padding: 15px;
	}

	.app-header {
		background-color: #222327;
  		@include flexbox;
  		@include justify-content(space-between);
  		@include align-items(center);
 		min-height: 65px;
	}

	.app-contents {
		overflow-y: auto;
		@include flex(1);

		&.center-on-screen {
			@include flexbox;
  			@include align-items(center);
		}

	}

	.app-footer {
		background-color: #222327;
	}


	// ELEMENTS WITHING APP


	.list-layout {
		padding-left: 20px;
		list-style-type: none;
		font-size: 20px;
		width: 100%;

		li {
			@include flexbox;
			@include align-items(center);
			margin-bottom: 25px;

			span, a {
				display: block;
			}
		}

		&.align-center li {
			text-align: center;
		}
	}





}
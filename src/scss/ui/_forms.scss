$colorDarker: darken($color-primary,5%);
$input-padding-vertical: 6px !default;
$input-padding-horizontal: 8px !default;

%ui-form-input {
  border: 1px solid $color-grey;
  background-color: #fff;
  color: #000;
  padding: $input-padding-vertical $input-padding-horizontal;
  margin: 0;
  line-height: 1; 
  max-width: 100%;
  @include prefix(border-radius, 3px);
  @include transition(box-shadow .2s ease, border-color .3s ease);
  @include prefix(box-sizing, border-box);

  
  &:focus {
    outline: 0;
    background-color: #fff;
    border-color: $color-primary;
    box-shadow: 0 0 0 2px rgba($colorDarker, 0.2)!important;
  } 
  &:disabled {
    outline: 0; 
    background-color: lighten($color-grey, 10%);
    border-color: $color-grey;
    box-shadow: none;
    cursor: not-allowed;
    color: darken($color-grey, 10%);
    text-shadow: none !important;      
  }

  @include placeholder() {
    color: $color-grey;
    text-shadow: 1px 1px 0 #fff;
  }
}

.#{$ui-class-prefix}-form {
  
    input[type=text], 
    input[type=password], 
    input[type=email], 
    input[type=url], 
    input[type=date], 
    input[type=month], 
    input[type=time], 
    input[type=datetime], 
    input[type=datetime-local], 
    input[type=week], 
    input[type=number], 
    input[type=search], 
    input[type=tel], 
    input[type=color],
    select {
        @extend %ui-form-input;      
        min-height: $form-elements-height;
        height: $form-elements-height;
    }
    textarea {
      @extend %ui-form-input; 
      resize: vertical;
    }

    select {
      cursor: pointer;
      @include prefix(appearance, none);
      background-color: transparent;
      background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' version='1.1' height='10px' width='15px'%3E%3Ctext x='0' y='10' fill='gray'%3E%E2%96%BE%3C/text%3E%3C/svg%3E");
      background-repeat: no-repeat;
      background-size: 18px;
      background-position: 99% center;
      background-clip: border-box;
      min-width: 63px;
      padding: $input-padding-vertical $input-padding-horizontal*3 $input-padding-vertical $input-padding-horizontal;
      &::-ms-expand {
        display: none;
      }
      
      option:not([disabled]) {
          color: #000;
      }

      option[disabled] {
        color: darken($color-grey, 8%);
      }

      &[multiple] {
        background: #fff;
        min-height: 112px;
        padding: 4px;
        option {
          padding: $input-padding-vertical $input-padding-horizontal;
          line-height: 1; 
          margin-bottom: 1px;
          @include prefix(border-radius, 3px);

          &:checked {
            //background-color: $color-primary;
            background: linear-gradient($color-primary, $color-primary);
            color: findColorInvert($color-primary);

            

          }
        }
      }

      @each $colorName, $colorValue in $color-list {

    
        &[multiple].#{""+$colorName+""} option:checked {
          background: linear-gradient($colorValue, $colorValue);
          color: findColorInvert($colorValue);
        }

      }


    }

    input[type=text], 
    input[type=password], 
    input[type=email], 
    input[type=url], 
    input[type=date], 
    input[type=month], 
    input[type=time], 
    input[type=datetime], 
    input[type=datetime-local], 
    input[type=week], 
    input[type=number], 
    input[type=search], 
    input[type=tel], 
    input[type=color],
    select,
    textarea {

      $newcolorlist: map-merge($color-list, (error: map-get($color-list, danger), valid: map-get($color-list, success)  ) );
      @each $colorName, $colorValue in $newcolorlist {

        $textColor: #000;

        &.#{""+$colorName+""} {
          border-color: $colorValue;
          color: $textColor;

          &:focus {
              border-color: $colorValue;
              box-shadow: 0 0 0 2px rgba( darken($colorValue, 5%), 0.2) !important;
          }
        }

      }
    }

    // Range slider
    $track-w: 100%;
    $track-h: 6px;
    $thumb-d: 18px;

    @mixin track() {
        box-sizing: border-box;
        border: none;
        width: $track-w; 
        height: $track-h;
        background: lighten($color-grey, 5%);
    }

    @mixin thumb() {
        box-sizing: border-box;
        border: none;
        width: $thumb-d; 
        height: $thumb-d;
        border-radius: 50%;
        background: lighten($color-primary, 5%);
        cursor: pointer;
    }

    [type='range'] {
        &, &::-webkit-slider-thumb {
            -webkit-appearance: none;
        }
        
        margin: 0;
        padding: 0;
        width: $track-w; 
        height: $thumb-d;
        background: transparent;
        font: 1em/1 arial, sans-serif;
        
        &::-webkit-slider-runnable-track {
            @include track
        }
        &::-moz-range-track { @include track }
        &::-ms-track { @include track }
        
        &::-webkit-slider-thumb {
            margin-top: .5*($track-h - $thumb-d);
            @include thumb
        }
        &::-moz-range-thumb { @include thumb }
        &::-ms-thumb {
            margin-top: 0;
            @include thumb
        }

        &:focus {
          outline: none;
          &::-webkit-slider-thumb {
            background: $color-primary;
          }
        }
        
        &::-ms-tooltip { display: none }
    }
    

    // RADIO's
    input[type=checkbox], 
    input[type=radio] {
        display: inline-block;
        height: 18px;
        width: 18px;
        border: 1px solid $color-grey;
        overflow: hidden;
        margin: -4px 0 0 0;
        vertical-align: middle;
        -webkit-appearance: none;
        outline: 0;
        background: 0 0;
        background-color: #fff;
        padding: 0;
        min-width: auto;
        @include transition(all .2s ease);

        &:before {
          @include transition(all .2s ease);
          @include opacity(0);
            display: block;
        }
        &:disabled {
          cursor: not-allowed;
          border-color: $color-grey;
          background-color: lighten($color-grey, 8%);
        }
        &:not(:disabled) {
            cursor: pointer;
        }
    }

    input[type=checkbox] {

      &:checked {
        border-color: $color-primary;
      }
      &:checked:before, 
      &:indeterminate:before {
        @include opacity(1);
        float: none;
        width: auto;
        content: '';
        display: block;
        width: 7px;
        height: 11px;
        border: solid $color-primary;
        border-width: 0 2px 2px 0;
        transform: rotate(45deg);
        position: relative;
        top: 1px;
        left: 5px;
      }
      &:disabled {
        border-color: $color-grey;
      }
      &:disabled:checked:before {
        border-color: $color-grey;
      }

      @each $colorName, $colorValue in $color-list {

        &.#{""+$colorName+""} {
          &:checked { border-color: $colorValue; }
          &:checked:before, &:indeterminate:before { border-color: $colorValue; }
        }
      }
    }

    input[type=radio] {
        border-radius: 50%;

        &:checked:not(:disabled) {
          border-color: $color-primary;
        }

        &:checked:before {
            content: '';
            width: 10px;
            height: 10px;
            margin: 3px auto 0;
            border-radius: 50%;
            background: $color-primary;
            float: none;
            @include opacity(1);
        }

        &:disabled:checked:before {
            background-color:$color-grey;
            float: none;
        }

        @each $colorName, $colorValue in $color-list {

          &.#{""+$colorName+""} {
            &:checked:not(:disabled) {
              border-color: $colorName;
            }
            &:checked:before { background-color: $colorName; }
          }
        }
    }
}

input[type=search] {

  background-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg version='1.1' id='Capa_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 451 451' style='enable-background:new 0 0 451 451;' xml:space='preserve'%3E%3Cstyle type='text/css'%3E .st0%7Bfill:%239E9E9E;%7D%0A%3C/style%3E%3Cg%3E%3Cpath class='st0' d='M447,428L337.4,318.4c29.4-33.8,47.2-77.9,47.2-126.1C384.6,86.2,298.4,0,192.4,0C86.2,0,0.1,86.3,0.1,192.3 s86.3,192.3,192.3,192.3c48.2,0,92.3-17.8,126.1-47.2L428,447c2.6,2.6,6.1,4,9.5,4s6.9-1.3,9.5-4C452.2,441.8,452.2,433.2,447,428z M27,192.3C27,101.1,101.1,27,192.2,27c91.2,0,165.3,74.2,165.3,165.3s-74.1,165.4-165.3,165.4C101.2,357.7,27,283.5,27,192.3z'/%3E%3C/g%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-size: 18px;
    background-position: 8px center;
    background-clip: border-box;

    padding-left: 36px !important;

    &:focus {
      background-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg version='1.1' id='Capa_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 451 451' style='enable-background:new 0 0 451 451;' xml:space='preserve'%3E%3Cg%3E%3Cpath d='M447,428L337.4,318.4c29.4-33.8,47.2-77.9,47.2-126.1C384.6,86.2,298.4,0,192.4,0C86.2,0,0.1,86.3,0.1,192.3 s86.3,192.3,192.3,192.3c48.2,0,92.3-17.8,126.1-47.2L428,447c2.6,2.6,6.1,4,9.5,4s6.9-1.3,9.5-4C452.2,441.8,452.2,433.2,447,428z M27,192.3C27,101.1,101.1,27,192.2,27c91.2,0,165.3,74.2,165.3,165.3s-74.1,165.4-165.3,165.4C101.2,357.7,27,283.5,27,192.3z'/%3E%3C/g%3E%3C/svg%3E%0A");
    }
}

// TOGGLE SLIDER
.toggle-button {
  display: inline-flex;
  align-items: center;

  label {
      margin: 0 !important;
  }

  input[type='checkbox'] {
      display: block;
      margin: 0 10px 0 0;
      -webkit-appearance: button;
      border: none;
      outline: none;
      background-color: lighten($color-grey, 10%);
      min-width: 50px;
      height: 22px;
      border-radius: 3px;
      cursor: pointer;
      position: relative;
      transition: background-color 1s;
      box-shadow: inset 0 1px 2px rgba(0, 0, 0, .2);

      &:after {
          content: attr(data-off);
          display: flex;
          align-items: center;
          justify-content: center;
          position: absolute;
          top: 50%;
          transform: translateY(-50%);
          left: 2px;
          text-transform: uppercase;
          font-size: 12px;
          width: 50%;
          height: calc(100% - 4px);
          font-weight: bold;
          background-color: #fdfdfd;
          border-radius: 2px;
          box-shadow: 0 1px 2px rgba(0, 0, 0, .2);
          background: rgb(255, 255, 255);
          transition: .5s all;
      }
      &:before, &:checked:before {
        display: none;
      }
      &:checked {
          background-color: $color-grey;
      }

      &:checked:after {
          content: attr(data-on);
          left: calc(50% - 2px);
      }
  }

  &.pill {

      input[type='checkbox']:after,
      input[type='checkbox'] {
          border-radius: 35px !important;
      }
  }

  @each $colorName, $colorValue in $color-list {

    &.#{""+$colorName+""} input[type='checkbox'] {
      &:checked {
        background-color: $colorValue;
      }
    }
  }


}






.#{$ui-class-prefix}-ddmenu {

	$self: &; // For BEM perpose

	margin: 0;
	padding: 0;
	list-style-type: none;

	@include flexbox; 
	@include flex-wrap(nowrap);
	@include flex-direction(row);

	position: relative;

	&.vertical {
		@include flex-direction(column);
		width: 100%;
	}

	@include breakpoint( map-get($dropdown-menu, break) ) {
		@include flex-direction(column);
		width: 100%;
	}

	ul {
		display: block; 
		margin: 0;
		padding: 0;
		list-style: none;
	}

	li {
		margin: 0;
		padding: 0;

		> ul { 
			position: absolute;
			top:100%;
			left:0;
			z-index: map-get($dropdown-menu, zindex);
			min-width: map-get($dropdown-menu, minwidth);
			visibility:hidden;
			text-align: left;
			@include opacity(0);

			@include breakpoint( map-get($dropdown-menu, break) ) {
				position: relative;
				top: auto;
				left: auto;
				right: auto;
				display: none;
			}

			li {
				float: none;
				position: relative;
			}
			li > ul {
				position: absolute;
			  	top: 0;
			  	left: 100%;
			  	visibility:hidden;
			  	text-align: left;
			  	@include opacity(0);
			  	@include breakpoint( map-get($dropdown-menu, break) ) {
					position: relative;
					top: auto;
					left: auto;
					right: auto;
					display: none;
				}
			}
		}

		@include breakpoint_min( map-get($dropdown-menu, break) ) {
			&:focus > ul,
			&:focus-within > ul,
			&:hover > ul,
			li.ddmenu__active > ul {
				visibility:visible;
				@include opacity(1);
			}
		}

		&.ddmenu__focus > ul {
			display: block;
			visibility:visible;
			@include opacity(1);
		}
	}


	&:before, &:after {
		content: "";
		display: table;		
	}
	&:after {
		clear: both;
	}
	

	// FIRST LEVEL ITEMS
	> li {

		margin-right: map-get($dropdown-menu, gutter);
		display: inline-block;
    	vertical-align: middle;
    	white-space: nowrap;
    	position: relative;

		@if map-get($dropdown-menu, height) != auto {
			line-height: map-get($dropdown-menu, height);
		}

		@include breakpoint( map-get($dropdown-menu, break) ) {
			margin-right: 0;
		}



		// Change the direction of the submenu to be aligned to the left. 
		&#{$self}__revert-sub {
		  ul { 
		    right: 0; 
		    left: auto; 
		    @include breakpoint( map-get($dropdown-menu, break) ) {
				left: auto;
				right: auto;
			}
		    
		    ul {
		    	right: 100%;
		      	left: auto;
		      	
		      	@include breakpoint( map-get($dropdown-menu, break) ) {
					left: auto;
					right: auto;
				}
		    }
		  }
		}
		// Stretch the submenu to the full width of the menu
		&#{$self}__fullwidth {
      		position: unset;
		
			> ul {
				min-width:100%;
				width:100%;
			}
		}

		a {
			display: block;
			text-decoration: none;
		}

		&:last-child {
			margin-right: 0;			
		}

	}

	&.vertical > li {
		
			margin-right: 0;
			display: block;
			width: 100%;		
		
	}


	// Change the direction of the last item to be aligned to the left. 
	&#{$self}--revert-last {
		position: relative;
		
		> li:last-child {
			ul {
				right: 0; 
				left: auto; 
		  		@include breakpoint( map-get($dropdown-menu, break) ) {
					left: auto;
					right: auto;
				}
		  		ul {
		  			right: 100%;
		  			left: auto;
		  			@include breakpoint( map-get($dropdown-menu, break) ) {
						left: auto;
						right: auto;
					}
		  		}
			}
		}
	}
	
	
	// Fade out menus
	&#{$self}.effect-fade {
		li > ul {
			visibility:hidden;
			@include opacity(0);
			@include transition( map-get($dropdown-menu, transition) ease);
		}
		li:focus > ul,
		li:focus-within > ul,
		li:hover > ul,
		li.ddmenu__active > ul {
			visibility: visible;
			@include opacity(1);
		}
	}
	// Ease out menus
	&#{$self}.effect-ease {
		li > ul {
			visibility:hidden;
			@include opacity(0);
			@include prefix('transform', translateY(-12px));
			@include transition(all map-get($dropdown-menu, transition) ease-in-out, visibility 0s linear map-get($dropdown-menu, transition), z-index 0s linear 0.01s);
		}
		li:focus > ul,
		li:focus-within > ul,
		li:hover > ul,
		li.ddmenu__active > ul {
			visibility: visible;
			@include opacity(1);
			@include prefix('transform', translateY(0%));
			transition-delay: 0s, 0s, map-get($dropdown-menu, transition);
		}
	}
	// Fold out menus
	&#{$self}.effect-fold {
		
		li > ul {
			max-height: 0;
			@include prefix('transform', perspective(400) rotate3d(1,0,0,-90deg));
			@include prefix('transform-origin', 50% 0);
			@include transition( map-get($dropdown-menu, transition) ease);
		}
		li:focus > ul,
		li:focus-within > ul,
		li:hover > ul,
		li.ddmenu__active > ul {
			 max-height:1000px;
			 @include prefix('transform', perspective(400) rotate3d(0,0,0,0));
		}
	
	}
	// Slide out menus
	&#{$self}.effect-slide {
		
		li > ul li {
			overflow: hidden;
			max-height: 0;
			@include transition(max-height map-get($dropdown-menu, transition) ease-in-out);
		}

		ul {
			visibility: visible;
			@include opacity(1);
		}

		li:hover > ul > li {
			max-height: 150px;
		}
	}

	// --
	// THEMES AND STYLES
	// ---------------------------------

	&#{$self}.theme--default {
		background-color: $color-primary;
		font-family: $font-primary;

		li {

			> a {
				background-color: $color-primary;
				color: findColorInvert($color-primary);
				&:hover {
					background-color: $color-accent;
				}
			}
		}

		ul {
			background-color: $color-primary;
		}

		> li {

		}


  	}

  	&.theme--contextmenu {
    	font-family: $font-primary;
    	
    	ul {
      		box-shadow: rgba(9, 30, 66, 0.25) 0px 4px 8px -2px, rgba(9, 30, 66, 0.31) 0px 0px 1px;
      		@include prefix(box-sizing, border-box);
      		background: rgb(255, 255, 255);
      		border-radius: 3px;
      		padding: 4px 0px;
      
      		li {
      			> a {
      				@include flexbox; 
					@include flex(0 0 auto);
					@include align-items(center);
      				@include prefix(box-sizing, border-box);
				    @include prefix(border-radius, 0px);
				    cursor: pointer;
				    background-color: rgb(255, 255, 255);
				    color: rgb(23, 43, 77);
				    fill: rgb(255, 255, 255);
				    text-decoration: none;
				    padding: 8px 12px 7px;

				    &:hover {
						background-color: rgb(244, 245, 247);
						color: rgb(23, 43, 77);
						fill: rgb(244, 245, 247);
						text-decoration: none;
					}
      			}
      		}
    	}
  	}
}

// WHY ?
.ctmenu {

	$self: &; // For BEM perpose

	display: block;
	position: absolute;
	top: 0;
	left: 0;
	z-index: 333;
	visibility: hidden;
	@include opacity(0);

	&#{$self}--open {
		visibility: visible;
		@include opacity(1);
	}

	ul {
		margin: 0;
		padding: 0;
		list-style-type: none;
		font-family: $font-primary;
		box-shadow: rgba(9, 30, 66, 0.25) 0px 4px 8px -2px, rgba(9, 30, 66, 0.31) 0px 0px 1px;
		@include prefix(box-sizing, border-box);
		background: rgb(255, 255, 255);
		border-radius: 3px;
		padding: 4px 0px;

		li {
			display: block;
			position: relative;
			margin: 0;
			padding: 0;

			
			> a {
				-webkit-box-align: center;
			    align-items: center;
			    box-sizing: border-box;
			    cursor: pointer;
			    display: flex;
			    background-color: rgb(255, 255, 255);
			    color: rgb(23, 43, 77);
			    fill: rgb(255, 255, 255);
			    border-radius: 0px;
			    flex: 0 0 auto;
			    text-decoration: none;
			    padding: 8px 12px 7px;

			    &:hover {
					background-color: rgb(244, 245, 247);
					color: rgb(23, 43, 77);
					fill: rgb(244, 245, 247);
					text-decoration: none;
				}
			}

			ul { // Target ALL children ul's
				position: absolute;
				top:0;
				left:100%;
				z-index: map-get($dropdown-menu, zindex);
				min-width: map-get($dropdown-menu, minwidth);
				visibility:hidden;
				@include opacity(0);
			}

			

			&:focus > ul,
			&:focus-within > ul,
			&:hover > ul {
				visibility:visible;
				@include opacity(1);
			}
		}

		&:before, &:after {
			content: "";
			display: table;		
		}
		&:after {
			clear: both;
		}
	}

	&#{$self}--open-right ul li ul,
	&#{$self}--align-right ul li ul {
		left: auto;
		right: 100%;
	}

	// Fade out menus
	&#{$self}--fade {
		ul {
			visibility:hidden;
			@include opacity(0);
			@include transition(map-get($dropdown-menu, transition) ease);
		}
	}
	// Ease out menus
	&#{$self}--ease {
		ul {
			visibility:hidden;
			@include opacity(0);
			@include prefix('transform', translateY(-12px));
			@include transition(all map-get($dropdown-menu, transition) ease-in-out, visibility 0s linear map-get($dropdown-menu, transition), z-index 0s linear 0.01s);
		}
		li:focus > ul,
		li:focus-within > ul,
		li:hover > ul {
			visibility: visible;
			@include opacity(1);
			@include prefix('transform', translateY(0%));
			transition-delay: 0s, 0s, map-get($dropdown-menu, transition);
		}
	}
	// Fold out menus
	&#{$self}--fold {
		
		li > ul {
			max-height: 0;
			@include prefix('transform', perspective(400) rotate3d(1,0,0,-90deg));
			@include prefix('transform-origin', 50% 0);
			@include transition(map-get($dropdown-menu, transition) ease);
		}
		li:focus > ul,
		li:focus-within > ul,
		li:hover > ul {
			 max-height:1000px;
			 @include prefix('transform', perspective(400) rotate3d(0,0,0,0));
		}
	
	}
	// Slide out menus
	&#{$self}--slide {
		
		li ul li {
			overflow: hidden;
			max-height: 0;
			@include transition(max-height map-get($dropdown-menu, transition) ease-in-out);
		}

		ul {
			visibility: visible;;
			@include opacity(1);
		}

		li:hover > ul > li {
			max-height: 150px;
		}
	}


}

// --
// DROPDOWN 
// -------------------
.dropdown { 
    display: inline-block;
    position: relative;

    .dropdown-trigger {}

    .dropdown-menu {
        list-style: none;
        margin: 0;
        padding: 0;
        background: map-get($ddmenu, background);
        background-clip: padding-box;
        border: 1px solid map-get($ddmenu, borderColor);
        border-radius: 2px;
        position: absolute;
        top: auto;
        left: 0;
		display: none;
		z-index: 999;
		
		&.is-dark {
			background-color: invert(map-get($ddmenu, background));
			border-color: invert(map-get($ddmenu, borderColor));

			li.divider {
				border-color: invert(map-get($ddmenu, divider));
			}
			a {
				&:hover {
                    background-color: invert(map-get($ddmenu, hoverColor));
                }
                &:active {
                    background-color: invert(map-get($ddmenu, activeColor));
                    color:invert(map-get($ddmenu, activeTextColor));
                }
			}
		}

        li {
            display: block;
            white-space: nowrap;
            margin: 0;
            padding: 0;
            width:100%;
            min-width: 146px;

            &.divider {
                height: 0;
                margin: 0;
                overflow: hidden;
                border-top: 1px solid map-get($ddmenu, divider);
            }

            a {
                display: block;
                padding: 6px 14px;
                background-color: transparent;
                text-decoration: none; 

                &:hover {
                    background-color: map-get($ddmenu, hoverColor);
                }
                &:active {
                    background-color: map-get($ddmenu, activeColor);
                    color: map-get($ddmenu, activeTextColor);
                }
            }

            &:first-child > a {
                border-radius: 2px 2px 0 0;
            }
            &:last-child > a {
                border-radius: 0 0 2px 2px;
            }

        }
      }
      &.menu-is-open .dropdown-menu { display: block; }

  }